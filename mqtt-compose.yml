version: '3.7'
services:
  mqtt:
    image: millegalb/dotnet-mqtt:latest
    networks:
      - skynet
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.tcp.routers.mqtt-tls.rule=HostSNI(`mqtt.qaybe.de`)"
        - "traefik.tcp.routers.mqtt-tls.entrypoints=mq-tls"
        - "traefik.tcp.routers.mqtt-tls.tls=true"
        - "traefik.tcp.routers.mqtt-tls.service=mqtt-tls"
        - "traefik.tcp.services.mqtt-tls.loadbalancer.server.port=8883"
        
        - "traefik.tcp.routers.mqtt.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.mqtt.entrypoints=mq"
        - "traefik.tcp.routers.mqtt.service=mqtt"
        - "traefik.tcp.services.mqtt.loadbalancer.server.port=8883"
  postgres:
    image: postgres:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.hostname == titan.marcelbenders.de]
    networks:
      - skynet
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/sec_postgres_mqtt
      - POSTGRES_USER=admin
    volumes:
      - postgres_mqtt:/var/lib/postgresql/data
    secrets:
      - sec_postgres_mqtt

secrets:
  sec_postgres_mqtt:
    external: true
        
networks:
  skynet:
    external: true
volumes:
  postgres_mqtt:
